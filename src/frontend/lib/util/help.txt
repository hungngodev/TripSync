}
blue
(new) SfCalendar SfCalendar({
  Key? key,
  CalendarView view = CalendarView.day,
  int firstDayOfWeek = 7,
  double headerHeight = 40,
  double viewHeaderHeight = -1,
  Color? todayHighlightColor,
  TextStyle? todayTextStyle,
  Color? cellBorderColor,
  Color? backgroundColor,
  CalendarDataSource<Object?>? dataSource,
  String? timeZone,
  Decoration? selectionDecoration,
  void Function(ViewChangedDetails)? onViewChanged,
  void Function(CalendarTapDetails)? onTap,
  void Function(CalendarLongPressDetails)? onLongPress,
  void Function(CalendarSelectionDetails)? onSelectionChanged,
  CalendarController? controller,
  String? appointmentTimeTextFormat,
  List<DateTime>? blackoutDates,
  Widget Function(BuildContext, ScheduleViewMonthHeaderDetails)? scheduleViewMonthHeaderBuilder,
  Widget Function(BuildContext, MonthCellDetails)? monthCellBuilder,
  Widget Function(BuildContext, CalendarAppointmentDetails)? appointmentBuilder,
  Widget Function(BuildContext, TimeRegionDetails)? timeRegionBuilder,
  String? headerDateFormat,
  CalendarHeaderStyle headerStyle = const CalendarHeaderStyle(),
  ViewHeaderStyle viewHeaderStyle = const ViewHeaderStyle(),
  TimeSlotViewSettings timeSlotViewSettings = const TimeSlotViewSettings(),
  ResourceViewSettings resourceViewSettings = const ResourceViewSettings(),
  MonthViewSettings monthViewSettings = const MonthViewSettings(),
  DateTime? initialDisplayDate,
  DateTime? initialSelectedDate,
  ScheduleViewSettings scheduleViewSettings = const ScheduleViewSettings(),
  DateTime? minDate,
  DateTime? maxDate,
  TextStyle appointmentTextStyle = const TextStyle(color: Colors.white, fontSize: -1, fontWeight: FontWeight.w500),
  bool showNavigationArrow = false,
  bool showDatePickerButton = false,
  bool showTodayButton = false,
  bool allowViewNavigation = false,
  bool showCurrentTimeIndicator = true,
  double cellEndPadding = -1,
  ViewNavigationMode viewNavigationMode = ViewNavigationMode.snap,
  List<CalendarView>? allowedViews,
  List<TimeRegion>? specialRegions,
  Widget Function(BuildContext, Future<void> Function())? loadMoreWidgetBuilder,
  TextStyle? blackoutDatesTextStyle,
  bool showWeekNumber = false,
  WeekNumberStyle weekNumberStyle = const WeekNumberStyle(),
  Widget Function(BuildContext, ResourceViewHeaderDetails)? resourceViewHeaderBuilder,
  bool allowAppointmentResize = false,
  void Function(AppointmentResizeStartDetails)? onAppointmentResizeStart,
  void Function(AppointmentResizeUpdateDetails)? onAppointmentResizeUpdate,
  void Function(AppointmentResizeEndDetails)? onAppointmentResizeEnd,
  bool allowDragAndDrop = false,
  DragAndDropSettings dragAndDropSettings = const DragAndDropSettings(),
  void Function(AppointmentDragStartDetails)? onDragStart,
  void Function(AppointmentDragUpdateDetails)? onDragUpdate,
  void Function(AppointmentDragEndDetails)? onDragEnd,
})